{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/CodeforcesInfo.js\",\n  _s = $RefreshSig$();\n// // CodeforcesInfo.js\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n\n// const CodeforcesInfo = () => {\n//   const [codeforcesData, setCodeforcesData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch Codeforces data and update the state\n//     // Replace the following with actual data fetching logic\n\n//     const fetchData = async () => {\n//       // Example URL\n//       const apiUrl = 'https://codeforces.com/api/user.info?handles=Tspectre';\n\n//       try {\n//         const response = await fetch(apiUrl);\n//         const data = await response.json();\n//         setCodeforcesData(data.result[0]);\n//       } catch (error) {\n//         console.error('Error fetching Codeforces data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Codeforces Information</h2>\n//       {codeforcesData && (\n//         <div className=\"card-content\">\n//           <p>Contribution Count: {codeforcesData.contribution}</p>\n//           <p>Problem Solved: {codeforcesData.problemsSolved}</p> {/* Update property name */}\n//           <p>Rank: {codeforcesData.rank}</p>\n//         </div>\n//       )}\n\n//     </div>\n//   );\n// };\n\n// export default CodeforcesInfo;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeforcesInfo = () => {\n  _s();\n  const [codeforcesData, setCodeforcesData] = useState(null);\n  useEffect(() => {\n    // Fetch Codeforces data and update the state\n    // Replace the following with actual data fetching logic\n\n    const fetchData = async () => {\n      // Example URL for recent submissions\n      const handle = 'Tspectre';\n      const apiUrl = `https://codeforces.com/api/user.status?handle=${handle}&from=1&count=10`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        // Check if the response status is OK\n        if (data.status === 'OK') {\n          // Update state with the recent submissions data\n          setCodeforcesData(data.result);\n        } else {\n          console.error('Codeforces API request failed with status:', data.status);\n        }\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Codeforces Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), codeforcesData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Submissions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: codeforcesData.map(submission => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Problem: \", submission.problem.name, \", Verdict: \", submission.verdict]\n        }, submission.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeforcesInfo, \"28ff9RCADInxzDLvi+HAZA6wAgY=\");\n_c = CodeforcesInfo;\nexport default CodeforcesInfo;\nvar _c;\n$RefreshReg$(_c, \"CodeforcesInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodeforcesInfo","_s","codeforcesData","setCodeforcesData","fetchData","handle","apiUrl","response","fetch","data","json","status","result","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","submission","problem","name","verdict","id","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/CodeforcesInfo.js"],"sourcesContent":["// // CodeforcesInfo.js\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n\n// const CodeforcesInfo = () => {\n//   const [codeforcesData, setCodeforcesData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch Codeforces data and update the state\n//     // Replace the following with actual data fetching logic\n\n//     const fetchData = async () => {\n//       // Example URL\n//       const apiUrl = 'https://codeforces.com/api/user.info?handles=Tspectre';\n\n//       try {\n//         const response = await fetch(apiUrl);\n//         const data = await response.json();\n//         setCodeforcesData(data.result[0]);\n//       } catch (error) {\n//         console.error('Error fetching Codeforces data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Codeforces Information</h2>\n//       {codeforcesData && (\n//         <div className=\"card-content\">\n//           <p>Contribution Count: {codeforcesData.contribution}</p>\n//           <p>Problem Solved: {codeforcesData.problemsSolved}</p> {/* Update property name */}\n//           <p>Rank: {codeforcesData.rank}</p>\n//         </div>\n//       )}\n\n//     </div>\n//   );\n// };\n\n// export default CodeforcesInfo;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\n\nconst CodeforcesInfo = () => {\n  const [codeforcesData, setCodeforcesData] = useState(null);\n\n  useEffect(() => {\n    // Fetch Codeforces data and update the state\n    // Replace the following with actual data fetching logic\n\n    const fetchData = async () => {\n      // Example URL for recent submissions\n      const handle = 'Tspectre';\n      const apiUrl = `https://codeforces.com/api/user.status?handle=${handle}&from=1&count=10`;\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        \n        // Check if the response status is OK\n        if (data.status === 'OK') {\n          // Update state with the recent submissions data\n          setCodeforcesData(data.result);\n        } else {\n          console.error('Codeforces API request failed with status:', data.status);\n        }\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h2>Codeforces Information</h2>\n      {codeforcesData && (\n        <div className=\"card-content\">\n          <h3>Recent Submissions:</h3>\n          <ul>\n            {codeforcesData.map(submission => (\n              <li key={submission.id}>\n                Problem: {submission.problem.name}, Verdict: {submission.verdict}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CodeforcesInfo;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACA;;IAEA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,MAAM,GAAG,UAAU;MACzB,MAAMC,MAAM,GAAI,iDAAgDD,MAAO,kBAAiB;MAExF,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;UACxB;UACAR,iBAAiB,CAACM,IAAI,CAACG,MAAM,CAAC;QAChC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEL,IAAI,CAACE,MAAM,CAAC;QAC1E;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBjB,OAAA;MAAAiB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BlB,cAAc,iBACbH,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrB,OAAA;QAAAiB,QAAA,EACGd,cAAc,CAACmB,GAAG,CAACC,UAAU,iBAC5BvB,OAAA;UAAAiB,QAAA,GAAwB,WACb,EAACM,UAAU,CAACC,OAAO,CAACC,IAAI,EAAC,aAAW,EAACF,UAAU,CAACG,OAAO;QAAA,GADzDH,UAAU,CAACI,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhDID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}