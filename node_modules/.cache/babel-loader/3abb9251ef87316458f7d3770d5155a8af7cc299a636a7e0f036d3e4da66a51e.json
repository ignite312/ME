{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/Contest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContestList = () => {\n  _s();\n  const [codeforcesContests, setCodeforcesContests] = useState([]);\n  const [atcoderContests, setAtcoderContests] = useState([]);\n  useEffect(() => {\n    const fetchCodeforcesContests = async () => {\n      try {\n        const response = await axios.get('https://codeforces.com/api/contest.list?gym=false');\n        const upcomingContests = response.data.result.filter(contest => contest.phase === 'BEFORE');\n        setCodeforcesContests(upcomingContests);\n      } catch (error) {\n        console.error('Error fetching Codeforces contests:', error);\n      }\n    };\n    const fetchAtcoderContests = async () => {\n      try {\n        const response = await axios.get('https://kenkoooo.com/atcoder/resources/contests.json');\n        const upcomingContests = response.data.filter(contest => new Date(contest.start_epoch_second * 1000) > new Date());\n        setAtcoderContests(upcomingContests);\n      } catch (error) {\n        console.error('Error fetching AtCoder contests:', error);\n      }\n    };\n    fetchCodeforcesContests();\n    fetchAtcoderContests();\n  }, []);\n  const calculateCountdown = startTimeSeconds => {\n    const nowInSeconds = Math.floor(Date.now() / 1000);\n    const timeRemaining = startTimeSeconds - nowInSeconds;\n    const hours = Math.floor(timeRemaining / 3600);\n    const minutes = Math.floor(timeRemaining % 3600 / 60);\n    const seconds = timeRemaining % 60;\n    return `${hours}h ${minutes}m ${seconds}s`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Codeforces Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: codeforcesContests.map(contest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Time: \", new Date(contest.startTimeSeconds * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Countdown: \", calculateCountdown(contest.startTimeSeconds)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, contest.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AtCoder Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: atcoderContests.map(contest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Time: \", new Date(contest.start_epoch_second * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Countdown: \", calculateCountdown(contest.start_epoch_second)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, contest.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ContestList, \"TfVqvazDJx2+oyy69vTA58Jr+90=\");\n_c = ContestList;\nexport default ContestList;\nvar _c;\n$RefreshReg$(_c, \"ContestList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ContestList","_s","codeforcesContests","setCodeforcesContests","atcoderContests","setAtcoderContests","fetchCodeforcesContests","response","get","upcomingContests","data","result","filter","contest","phase","error","console","fetchAtcoderContests","Date","start_epoch_second","calculateCountdown","startTimeSeconds","nowInSeconds","Math","floor","now","timeRemaining","hours","minutes","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","toLocaleString","id","title","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/Contest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ContestList = () => {\n  const [codeforcesContests, setCodeforcesContests] = useState([]);\n  const [atcoderContests, setAtcoderContests] = useState([]);\n\n  useEffect(() => {\n    const fetchCodeforcesContests = async () => {\n      try {\n        const response = await axios.get('https://codeforces.com/api/contest.list?gym=false');\n        const upcomingContests = response.data.result.filter(contest => contest.phase === 'BEFORE');\n        setCodeforcesContests(upcomingContests);\n      } catch (error) {\n        console.error('Error fetching Codeforces contests:', error);\n      }\n    };\n\n    const fetchAtcoderContests = async () => {\n      try {\n        const response = await axios.get('https://kenkoooo.com/atcoder/resources/contests.json');\n        const upcomingContests = response.data.filter(contest => new Date(contest.start_epoch_second * 1000) > new Date());\n        setAtcoderContests(upcomingContests);\n      } catch (error) {\n        console.error('Error fetching AtCoder contests:', error);\n      }\n    };\n\n    fetchCodeforcesContests();\n    fetchAtcoderContests();\n  }, []);\n\n  const calculateCountdown = startTimeSeconds => {\n    const nowInSeconds = Math.floor(Date.now() / 1000);\n    const timeRemaining = startTimeSeconds - nowInSeconds;\n\n    const hours = Math.floor(timeRemaining / 3600);\n    const minutes = Math.floor((timeRemaining % 3600) / 60);\n    const seconds = timeRemaining % 60;\n\n    return `${hours}h ${minutes}m ${seconds}s`;\n  };\n\n  return (\n    <div>\n      <h1>Upcoming Contests</h1>\n\n      <h2>Codeforces Contests</h2>\n      <ul>\n        {codeforcesContests.map(contest => (\n          <li key={contest.id}>\n            <p>{contest.name}</p>\n            <p>Start Time: {new Date(contest.startTimeSeconds * 1000).toLocaleString()}</p>\n            <p>Countdown: {calculateCountdown(contest.startTimeSeconds)}</p>\n          </li>\n        ))}\n      </ul>\n\n      <h2>AtCoder Contests</h2>\n      <ul>\n        {atcoderContests.map(contest => (\n          <li key={contest.id}>\n            <p>{contest.title}</p>\n            <p>Start Time: {new Date(contest.start_epoch_second * 1000).toLocaleString()}</p>\n            <p>Countdown: {calculateCountdown(contest.start_epoch_second)}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContestList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}