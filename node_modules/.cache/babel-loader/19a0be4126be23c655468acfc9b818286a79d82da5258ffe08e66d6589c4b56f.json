{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/GitHubInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport githubLogo from './github.png'; // Replace with the actual file path of your Codeforces logo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubInfo = () => {\n  _s();\n  const [githubData, setGithubData] = useState(null);\n  const fetchGitHubData = async () => {\n    const userApiUrl = 'https://api.github.com/users/ignite312';\n    const graphqlApiUrl = 'https://api.github.com/graphql';\n    const token = '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'; // Replace with your GitHub Personal Access Token\n\n    try {\n      const userResponse = await fetch(userApiUrl);\n      const userData = await userResponse.json();\n      if (!userResponse.ok) {\n        throw new Error(`GitHub API request failed: ${userData.message}`);\n      }\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n            following {\n              totalCount\n            }\n          }\n        }\n      `;\n      const response = await fetch(graphqlApiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (data.errors) {\n        throw new Error(`GitHub GraphQL API request failed: ${data.errors[0].message}`);\n      }\n      setGithubData({\n        login: userData.login,\n        public_repos: userData.public_repos,\n        followers: userData.followers,\n        following: userData.following,\n        contributions: data.data.viewer.contributionsCollection.contributionCalendar.totalContributions,\n        repositoriesContributedTo: data.data.viewer.repositoriesContributedTo.totalCount\n      });\n    } catch (error) {\n      console.error('Error fetching GitHub data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGitHubData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: githubLogo,\n      alt: \"Codeforces Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), githubData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Handle: \", githubData.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Contribution Count: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: '+' + githubData.contributions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Public Repositories: \", githubData.public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Followers: \", githubData.followers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Following: \", githubData.following]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubInfo, \"ovlTOzbDmbe5qGrhiFxn9Yf+Z4A=\");\n_c = GitHubInfo;\nexport default GitHubInfo;\nvar _c;\n$RefreshReg$(_c, \"GitHubInfo\");","map":{"version":3,"names":["React","useState","useEffect","githubLogo","jsxDEV","_jsxDEV","GitHubInfo","_s","githubData","setGithubData","fetchGitHubData","userApiUrl","graphqlApiUrl","token","userResponse","fetch","userData","json","ok","Error","message","query","response","method","headers","Authorization","body","JSON","stringify","data","errors","login","public_repos","followers","following","contributions","viewer","contributionsCollection","contributionCalendar","totalContributions","repositoriesContributedTo","totalCount","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","color","display","gap","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/GitHubInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport githubLogo from './github.png'; // Replace with the actual file path of your Codeforces logo\n\nconst GitHubInfo = () => {\n  const [githubData, setGithubData] = useState(null);\n\n  const fetchGitHubData = async () => {\n    const userApiUrl = 'https://api.github.com/users/ignite312';\n    const graphqlApiUrl = 'https://api.github.com/graphql';\n    const token = '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'; // Replace with your GitHub Personal Access Token\n\n    try {\n      const userResponse = await fetch(userApiUrl);\n      const userData = await userResponse.json();\n\n      if (!userResponse.ok) {\n        throw new Error(`GitHub API request failed: ${userData.message}`);\n      }\n\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n            following {\n              totalCount\n            }\n          }\n        }\n      `;\n\n      const response = await fetch(graphqlApiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await response.json();\n\n      if (data.errors) {\n        throw new Error(`GitHub GraphQL API request failed: ${data.errors[0].message}`);\n      }\n\n      setGithubData({\n        login: userData.login,\n        public_repos: userData.public_repos,\n        followers: userData.followers,\n        following: userData.following,\n        contributions: data.data.viewer.contributionsCollection.contributionCalendar.totalContributions,\n        repositoriesContributedTo: data.data.viewer.repositoriesContributedTo.totalCount,\n      });\n    } catch (error) {\n      console.error('Error fetching GitHub data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGitHubData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h3>GitHub</h3>\n      <img src={githubLogo} alt=\"Codeforces Logo\" className=\"logo\" />\n      {githubData && (\n        <div className=\"card-content\">\n          <h2>Handle: {githubData.login}</h2>\n          <div style={{ color: 'green' }}>\n              <span style={{ color: 'black' }}>Contribution Count: </span>\n              <strong>{'+'+ githubData.contributions}</strong>\n            </div>\n          <p>Public Repositories: {githubData.public_repos}</p>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <p>Followers: {githubData.followers}</p>\n            <p>Following: {githubData.following}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GitHubInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,cAAc;AACrB,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,UAAU,GAAG,wCAAwC;IAC3D,MAAMC,aAAa,GAAG,gCAAgC;IACtD,MAAMC,KAAK,GAAG,0CAA0C,CAAC,CAAC;;IAE1D,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACJ,UAAU,CAAC;MAC5C,MAAMK,QAAQ,GAAG,MAAMF,YAAY,CAACG,IAAI,CAAC,CAAC;MAE1C,IAAI,CAACH,YAAY,CAACI,EAAE,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAE,8BAA6BH,QAAQ,CAACI,OAAQ,EAAC,CAAC;MACnE;MAEA,MAAMC,KAAK,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MAED,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACH,aAAa,EAAE;QAC1CW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASZ,KAAM;QACjC,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACL,IAAI,CAAC,CAAC;MAElC,IAAIY,IAAI,CAACC,MAAM,EAAE;QACf,MAAM,IAAIX,KAAK,CAAE,sCAAqCU,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACV,OAAQ,EAAC,CAAC;MACjF;MAEAX,aAAa,CAAC;QACZsB,KAAK,EAAEf,QAAQ,CAACe,KAAK;QACrBC,YAAY,EAAEhB,QAAQ,CAACgB,YAAY;QACnCC,SAAS,EAAEjB,QAAQ,CAACiB,SAAS;QAC7BC,SAAS,EAAElB,QAAQ,CAACkB,SAAS;QAC7BC,aAAa,EAAEN,IAAI,CAACA,IAAI,CAACO,MAAM,CAACC,uBAAuB,CAACC,oBAAoB,CAACC,kBAAkB;QAC/FC,yBAAyB,EAAEX,IAAI,CAACA,IAAI,CAACO,MAAM,CAACI,yBAAyB,CAACC;MACxE,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACdQ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKuC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBxC,OAAA;MAAAwC,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf5C,OAAA;MAAK6C,GAAG,EAAE/C,UAAW;MAACgD,GAAG,EAAC,iBAAiB;MAACP,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DzC,UAAU,iBACTH,OAAA;MAAKuC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BxC,OAAA;QAAAwC,QAAA,GAAI,UAAQ,EAACrC,UAAU,CAACuB,KAAK;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnC5C,OAAA;QAAK+C,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAR,QAAA,gBAC3BxC,OAAA;UAAM+C,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAR,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5D5C,OAAA;UAAAwC,QAAA,EAAS,GAAG,GAAErC,UAAU,CAAC2B;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACR5C,OAAA;QAAAwC,QAAA,GAAG,uBAAqB,EAACrC,UAAU,CAACwB,YAAY;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrD5C,OAAA;QAAK+C,KAAK,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAV,QAAA,gBAC3CxC,OAAA;UAAAwC,QAAA,GAAG,aAAW,EAACrC,UAAU,CAACyB,SAAS;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxC5C,OAAA;UAAAwC,QAAA,GAAG,aAAW,EAACrC,UAAU,CAAC0B,SAAS;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA1FID,UAAU;AAAAkD,EAAA,GAAVlD,UAAU;AA4FhB,eAAeA,UAAU;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}