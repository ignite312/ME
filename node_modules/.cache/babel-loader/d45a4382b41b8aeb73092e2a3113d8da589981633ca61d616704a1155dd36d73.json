{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/GitHubInfo.js\",\n  _s = $RefreshSig$();\n// GitHubInfo.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Include your main styling file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubInfo = () => {\n  _s();\n  const [githubData, setGithubData] = useState(null);\n  useEffect(() => {\n    const fetchGitHubData = async () => {\n      const apiUrl = 'https://api.github.com/graphql';\n      const token = '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'; // Replace with your GitHub Personal Access Token\n\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n            following {\n              totalCount\n            }\n          }\n        }\n      `;\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query\n          })\n        });\n        const data = await response.json();\n        if (data.errors) {\n          throw new Error(`GitHub API request failed: ${data.errors[0].message}`);\n        }\n        setGithubData(data.data.viewer);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n    fetchGitHubData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), githubData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Handle: \", githubData.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Public Repositories: \", githubData.public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Followers: \", githubData.followers.totalCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Following: \", githubData.following.totalCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contribution Count: \", githubData.contributionsCollection.contributionCalendar.totalContributions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Repositories Contributed To: \", githubData.repositoriesContributedTo.totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubInfo, \"ovlTOzbDmbe5qGrhiFxn9Yf+Z4A=\");\n_c = GitHubInfo;\nexport default GitHubInfo;\nvar _c;\n$RefreshReg$(_c, \"GitHubInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GitHubInfo","_s","githubData","setGithubData","fetchGitHubData","apiUrl","token","query","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","errors","Error","message","viewer","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","login","public_repos","style","display","gap","followers","totalCount","following","contributionsCollection","contributionCalendar","totalContributions","repositoriesContributedTo","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/GitHubInfo.js"],"sourcesContent":["// GitHubInfo.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Include your main styling file\n\nconst GitHubInfo = () => {\n  const [githubData, setGithubData] = useState(null);\n\n  useEffect(() => {\n    const fetchGitHubData = async () => {\n      const apiUrl = 'https://api.github.com/graphql';\n      const token = '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'; // Replace with your GitHub Personal Access Token\n\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n            following {\n              totalCount\n            }\n          }\n        }\n      `;\n\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({ query }),\n        });\n\n        const data = await response.json();\n\n        if (data.errors) {\n          throw new Error(`GitHub API request failed: ${data.errors[0].message}`);\n        }\n\n        setGithubData(data.data.viewer);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n\n    fetchGitHubData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h3>GitHub</h3>\n      {githubData && (\n        <div className=\"card-content\">\n          <h2>Handle: {githubData.login}</h2>\n          <p>Public Repositories: {githubData.public_repos}</p>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <p>Followers: {githubData.followers.totalCount}</p>\n            <p>Following: {githubData.following.totalCount}</p>\n          </div>\n          <p>Contribution Count: {githubData.contributionsCollection.contributionCalendar.totalContributions}</p>\n          <p>Repositories Contributed To: {githubData.repositoriesContributedTo.totalCount}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GitHubInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}