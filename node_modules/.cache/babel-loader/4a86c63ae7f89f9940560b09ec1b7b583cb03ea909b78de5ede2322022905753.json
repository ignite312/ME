{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/AtcoderInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AtCoderInfo = () => {\n  _s();\n  const [atCoderData, setAtCoderData] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n  useEffect(() => {\n    // Fetch AtCoder data and update the state\n    const fetchData = async () => {\n      const handle = 'ignite312';\n\n      // Example URL for user information\n      const userInfoUrl = `https://kenkoooo.com/atcoder/atcoder-api/v3/user_info?user=ignite312`;\n      try {\n        // Fetch AtCoder user information data\n        const userInfoResponse = await fetch(userInfoUrl);\n        const userInfoData = await userInfoResponse.json();\n\n        // Log the fetched data (for debugging)\n        console.log('userInfoData:', userInfoData);\n\n        // Check if the API request was successful\n        if (userInfoData && userInfoData.length > 0) {\n          // Update state with AtCoder user details\n          setAtCoderData(userInfoData);\n          setUserDetails(userInfoData[0]);\n        } else {\n          console.error('AtCoder API request failed or no data received.');\n        }\n      } catch (error) {\n        console.error('Error fetching AtCoder data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"AtCoder \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Handle: \", userDetails.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", userDetails.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AtCoderInfo, \"lUPoQDdyLjmxU5mtKvU4o7D3eto=\");\n_c = AtCoderInfo;\nexport default AtCoderInfo;\nvar _c;\n$RefreshReg$(_c, \"AtCoderInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AtCoderInfo","_s","atCoderData","setAtCoderData","userDetails","setUserDetails","fetchData","handle","userInfoUrl","userInfoResponse","fetch","userInfoData","json","console","log","length","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","rating","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/AtcoderInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Styles.css';\n\nconst AtCoderInfo = () => {\n  const [atCoderData, setAtCoderData] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n\n  useEffect(() => {\n    // Fetch AtCoder data and update the state\n    const fetchData = async () => {\n      const handle = 'ignite312';\n\n      // Example URL for user information\n      const userInfoUrl = `https://kenkoooo.com/atcoder/atcoder-api/v3/user_info?user=ignite312`;\n\n      try {\n        // Fetch AtCoder user information data\n        const userInfoResponse = await fetch(userInfoUrl);\n        const userInfoData = await userInfoResponse.json();\n\n        // Log the fetched data (for debugging)\n        console.log('userInfoData:', userInfoData);\n\n        // Check if the API request was successful\n        if (userInfoData && userInfoData.length > 0) {\n          // Update state with AtCoder user details\n          setAtCoderData(userInfoData);\n          setUserDetails(userInfoData[0]);\n        } else {\n          console.error('AtCoder API request failed or no data received.');\n        }\n      } catch (error) {\n        console.error('Error fetching AtCoder data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h3>AtCoder </h3>\n      {userDetails && (\n        <div className=\"card-content\">\n          <h2>Handle: {userDetails.username}</h2>\n          <p>Rating: {userDetails.rating}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AtCoderInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,WAAW;;MAE1B;MACA,MAAMC,WAAW,GAAI,sEAAqE;MAE1F,IAAI;QACF;QACA,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACF,WAAW,CAAC;QACjD,MAAMG,YAAY,GAAG,MAAMF,gBAAgB,CAACG,IAAI,CAAC,CAAC;;QAElD;QACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,YAAY,CAAC;;QAE1C;QACA,IAAIA,YAAY,IAAIA,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;UAC3C;UACAZ,cAAc,CAACQ,YAAY,CAAC;UAC5BN,cAAc,CAACM,YAAY,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,MAAM;UACLE,OAAO,CAACG,KAAK,CAAC,iDAAiD,CAAC;QAClE;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBlB,WAAW,iBACVL,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BnB,OAAA;QAAAmB,QAAA,GAAI,UAAQ,EAACd,WAAW,CAACmB,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvCvB,OAAA;QAAAmB,QAAA,GAAG,UAAQ,EAACd,WAAW,CAACoB,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/CID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}