{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/CodeforcesInfo.js\",\n  _s = $RefreshSig$();\n// CodeforcesInfo.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeforcesInfo = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [problemCount, setProblemCount] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch user information\n        const userResponse = await axios.get('https://codeforces.com/api/user.info?handles=YourHandle');\n        setUserInfo(userResponse.data.result[0]);\n\n        // Fetch user's solved problems\n        const statusResponse = await axios.get(`https://codeforces.com/api/user.status?handle=${userInfo.handle}`);\n\n        // Count the number of distinct problems solved\n        const solvedProblems = new Set();\n        statusResponse.data.result.forEach(submission => {\n          if (submission.verdict === 'OK') {\n            solvedProblems.add(submission.problem.contestId + submission.problem.index);\n          }\n        });\n        setProblemCount(solvedProblems.size);\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n    fetchData();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userInfo.handle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", userInfo.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Problems Solved: \", problemCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeforcesInfo, \"7Xl9KUqE7Qh4Z4XSa9CnM3hxREA=\");\n_c = CodeforcesInfo;\nexport default CodeforcesInfo;\nvar _c;\n$RefreshReg$(_c, \"CodeforcesInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CodeforcesInfo","_s","userInfo","setUserInfo","problemCount","setProblemCount","fetchData","userResponse","get","data","result","statusResponse","handle","solvedProblems","Set","forEach","submission","verdict","add","problem","contestId","index","size","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","rating","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/CodeforcesInfo.js"],"sourcesContent":["// CodeforcesInfo.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CodeforcesInfo = () => {\n  const [userInfo, setUserInfo] = useState(null);\n  const [problemCount, setProblemCount] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch user information\n        const userResponse = await axios.get('https://codeforces.com/api/user.info?handles=YourHandle');\n        setUserInfo(userResponse.data.result[0]);\n\n        // Fetch user's solved problems\n        const statusResponse = await axios.get(\n          `https://codeforces.com/api/user.status?handle=${userInfo.handle}`\n        );\n\n        // Count the number of distinct problems solved\n        const solvedProblems = new Set();\n        statusResponse.data.result.forEach((submission) => {\n          if (submission.verdict === 'OK') {\n            solvedProblems.add(submission.problem.contestId + submission.problem.index);\n          }\n        });\n\n        setProblemCount(solvedProblems.size);\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n\n    fetchData();\n  }, [userInfo]);\n\n  return (\n    <div>\n      {userInfo ? (\n        <div>\n          <h2>{userInfo.handle}</h2>\n          <p>Rating: {userInfo.rating}</p>\n          <p>Total Problems Solved: {problemCount}</p>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default CodeforcesInfo;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,YAAY,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yDAAyD,CAAC;QAC/FL,WAAW,CAACI,YAAY,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;QAExC;QACA,MAAMC,cAAc,GAAG,MAAMd,KAAK,CAACW,GAAG,CACnC,iDAAgDN,QAAQ,CAACU,MAAO,EACnE,CAAC;;QAED;QACA,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;QAChCH,cAAc,CAACF,IAAI,CAACC,MAAM,CAACK,OAAO,CAAEC,UAAU,IAAK;UACjD,IAAIA,UAAU,CAACC,OAAO,KAAK,IAAI,EAAE;YAC/BJ,cAAc,CAACK,GAAG,CAACF,UAAU,CAACG,OAAO,CAACC,SAAS,GAAGJ,UAAU,CAACG,OAAO,CAACE,KAAK,CAAC;UAC7E;QACF,CAAC,CAAC;QAEFhB,eAAe,CAACQ,cAAc,CAACS,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAA0B,QAAA,EACGvB,QAAQ,gBACPH,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAKvB,QAAQ,CAACU;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1B9B,OAAA;QAAA0B,QAAA,GAAG,UAAQ,EAACvB,QAAQ,CAAC4B,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC9B,OAAA;QAAA0B,QAAA,GAAG,yBAAuB,EAACrB,YAAY;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,gBAEN9B,OAAA;MAAA0B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA9CID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}