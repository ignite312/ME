{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/GitHubInfo.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n// import githubLogo from './github.png'; // Replace with the actual file path of your Codeforces logo\n\n// const GitHubInfo = () => {\n//   const [githubData, setGithubData] = useState(null);\n\n//   const fetchGitHubData = async () => {\n//     const userApiUrl = 'https://api.github.com/users/ignite312';\n//     const graphqlApiUrl = 'https://api.github.com/graphql';\n//     const token = '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';\n\n//     try {\n//       const userResponse = await fetch(userApiUrl);\n//       const userData = await userResponse.json();\n\n//       if (!userResponse.ok) {\n//         throw new Error(`GitHub API request failed: ${userData.message}`);\n//       }\n\n//       const query = `\n//         query {\n//           viewer {\n//             contributionsCollection {\n//               contributionCalendar {\n//                 totalContributions\n//               }\n//             }\n//             login\n//             repositoriesContributedTo {\n//               totalCount\n//             }\n//             followers {\n//               totalCount\n//             }\n//             following {\n//               totalCount\n//             }\n//           }\n//         }\n//       `;\n\n//       const response = await fetch(graphqlApiUrl, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ query }),\n//       });\n\n//       const data = await response.json();\n\n//       if (data.errors) {\n//         throw new Error(`GitHub GraphQL API request failed: ${data.errors[0].message}`);\n//       }\n\n//       setGithubData({\n//         login: userData.login,\n//         public_repos: userData.public_repos,\n//         followers: userData.followers,\n//         following: userData.following,\n//         contributions: data.data.viewer.contributionsCollection.contributionCalendar.totalContributions,\n//         repositoriesContributedTo: data.data.viewer.repositoriesContributedTo.totalCount,\n//       });\n//     } catch (error) {\n//       console.error('Error fetching GitHub data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchGitHubData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h3>GitHub</h3>\n//       <img src={githubLogo} alt=\"Codeforces Logo\" className=\"logo\" />\n//       {githubData && (\n//         <div className=\"card-content\">\n//           <h2>Handle: {githubData.login}</h2>\n//           <div style={{ color: 'green' }}>\n//               <span style={{ color: 'black' }}>Contribution Count: </span>\n//               <strong>{'+'+ githubData.contributions}</strong>\n//             </div>\n//           <p>Public Repositories: {githubData.public_repos}</p>\n//           <div style={{ display: 'flex', gap: '10px' }}>\n//             <p>Followers: {githubData.followers}</p>\n//             <p>Following: {githubData.following}</p>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default GitHubInfo;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport githubLogo from './github.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubInfo = () => {\n  _s();\n  const [githubData, setGithubData] = useState(null);\n  const fetchGitHubData = async () => {\n    const userApiUrl = 'https://api.github.com/users/ignite312';\n    const eventsApiUrl = 'https://api.github.com/users/ignite312/events';\n    try {\n      const userResponse = await fetch(userApiUrl);\n      const eventsResponse = await fetch(eventsApiUrl);\n      if (!userResponse.ok || !eventsResponse.ok) {\n        throw new Error('GitHub API request failed');\n      }\n      const userData = await userResponse.json();\n      const eventsData = await eventsResponse.json();\n\n      // Count the number of contributions from the events\n      const contributionCount = eventsData.filter(event => event.type === 'PushEvent').length;\n      setGithubData({\n        login: userData.login,\n        public_repos: userData.public_repos,\n        followers: userData.followers,\n        following: userData.following,\n        contributions: contributionCount\n      });\n    } catch (error) {\n      console.error('Error fetching GitHub data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchGitHubData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: githubLogo,\n      alt: \"GitHub Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), githubData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Handle: \", githubData.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"Contribution Count: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: '+' + githubData.contributions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Public Repositories: \", githubData.public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Followers: \", githubData.followers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Following: \", githubData.following]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubInfo, \"ovlTOzbDmbe5qGrhiFxn9Yf+Z4A=\");\n_c = GitHubInfo;\nexport default GitHubInfo;\nvar _c;\n$RefreshReg$(_c, \"GitHubInfo\");","map":{"version":3,"names":["React","useState","useEffect","githubLogo","jsxDEV","_jsxDEV","GitHubInfo","_s","githubData","setGithubData","fetchGitHubData","userApiUrl","eventsApiUrl","userResponse","fetch","eventsResponse","ok","Error","userData","json","eventsData","contributionCount","filter","event","type","length","login","public_repos","followers","following","contributions","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","color","display","gap","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/GitHubInfo.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n// import githubLogo from './github.png'; // Replace with the actual file path of your Codeforces logo\n\n// const GitHubInfo = () => {\n//   const [githubData, setGithubData] = useState(null);\n\n//   const fetchGitHubData = async () => {\n//     const userApiUrl = 'https://api.github.com/users/ignite312';\n//     const graphqlApiUrl = 'https://api.github.com/graphql';\n//     const token = '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';\n\n//     try {\n//       const userResponse = await fetch(userApiUrl);\n//       const userData = await userResponse.json();\n\n//       if (!userResponse.ok) {\n//         throw new Error(`GitHub API request failed: ${userData.message}`);\n//       }\n\n//       const query = `\n//         query {\n//           viewer {\n//             contributionsCollection {\n//               contributionCalendar {\n//                 totalContributions\n//               }\n//             }\n//             login\n//             repositoriesContributedTo {\n//               totalCount\n//             }\n//             followers {\n//               totalCount\n//             }\n//             following {\n//               totalCount\n//             }\n//           }\n//         }\n//       `;\n\n//       const response = await fetch(graphqlApiUrl, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ query }),\n//       });\n\n//       const data = await response.json();\n\n//       if (data.errors) {\n//         throw new Error(`GitHub GraphQL API request failed: ${data.errors[0].message}`);\n//       }\n\n//       setGithubData({\n//         login: userData.login,\n//         public_repos: userData.public_repos,\n//         followers: userData.followers,\n//         following: userData.following,\n//         contributions: data.data.viewer.contributionsCollection.contributionCalendar.totalContributions,\n//         repositoriesContributedTo: data.data.viewer.repositoriesContributedTo.totalCount,\n//       });\n//     } catch (error) {\n//       console.error('Error fetching GitHub data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchGitHubData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h3>GitHub</h3>\n//       <img src={githubLogo} alt=\"Codeforces Logo\" className=\"logo\" />\n//       {githubData && (\n//         <div className=\"card-content\">\n//           <h2>Handle: {githubData.login}</h2>\n//           <div style={{ color: 'green' }}>\n//               <span style={{ color: 'black' }}>Contribution Count: </span>\n//               <strong>{'+'+ githubData.contributions}</strong>\n//             </div>\n//           <p>Public Repositories: {githubData.public_repos}</p>\n//           <div style={{ display: 'flex', gap: '10px' }}>\n//             <p>Followers: {githubData.followers}</p>\n//             <p>Following: {githubData.following}</p>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default GitHubInfo;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport githubLogo from './github.png';\n\nconst GitHubInfo = () => {\n  const [githubData, setGithubData] = useState(null);\n\n  const fetchGitHubData = async () => {\n    const userApiUrl = 'https://api.github.com/users/ignite312';\n    const eventsApiUrl = 'https://api.github.com/users/ignite312/events';\n\n    try {\n      const userResponse = await fetch(userApiUrl);\n      const eventsResponse = await fetch(eventsApiUrl);\n\n      if (!userResponse.ok || !eventsResponse.ok) {\n        throw new Error('GitHub API request failed');\n      }\n\n      const userData = await userResponse.json();\n      const eventsData = await eventsResponse.json();\n\n      // Count the number of contributions from the events\n      const contributionCount = eventsData.filter(event => event.type === 'PushEvent').length;\n\n      setGithubData({\n        login: userData.login,\n        public_repos: userData.public_repos,\n        followers: userData.followers,\n        following: userData.following,\n        contributions: contributionCount,\n      });\n    } catch (error) {\n      console.error('Error fetching GitHub data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchGitHubData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h3>GitHub</h3>\n      <img src={githubLogo} alt=\"GitHub Logo\" className=\"logo\" />\n      {githubData && (\n        <div className=\"card-content\">\n          <h2>Handle: {githubData.login}</h2>\n          <div style={{ color: 'green' }}>\n            <span style={{ color: 'black' }}>Contribution Count: </span>\n            <strong>{'+' + githubData.contributions}</strong>\n          </div>\n          <p>Public Repositories: {githubData.public_repos}</p>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <p>Followers: {githubData.followers}</p>\n            <p>Following: {githubData.following}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GitHubInfo;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}