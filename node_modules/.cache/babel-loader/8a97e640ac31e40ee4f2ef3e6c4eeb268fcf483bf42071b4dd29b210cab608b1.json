{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/CodeforcesInfo.js\",\n  _s = $RefreshSig$();\n// // CodeforcesInfo.js\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n\n// const CodeforcesInfo = () => {\n//   const [codeforcesData, setCodeforcesData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch Codeforces data and update the state\n//     // Replace the following with actual data fetching logic\n\n//     const fetchData = async () => {\n//       // Example URL\n//       const apiUrl = 'https://codeforces.com/api/user.info?handles=Tspectre';\n\n//       try {\n//         const response = await fetch(apiUrl);\n//         const data = await response.json();\n//         setCodeforcesData(data.result[0]);\n//       } catch (error) {\n//         console.error('Error fetching Codeforces data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Codeforces Information</h2>\n//       {codeforcesData && (\n//         <div className=\"card-content\">\n//           <p>Contribution Count: {codeforcesData.contribution}</p>\n//           <p>Problem Solved: {codeforcesData.problemsSolved}</p> {/* Update property name */}\n//           <p>Rank: {codeforcesData.rank}</p>\n//         </div>\n//       )}\n\n//     </div>\n//   );\n// };\n\n// export default CodeforcesInfo;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeforcesInfo = () => {\n  _s();\n  const [codeforcesData, setCodeforcesData] = useState(null);\n  const [okProblemIds, setOkProblemIds] = useState(new Set());\n  useEffect(() => {\n    // Fetch Codeforces data and update the state\n    // Replace the following with actual data fetching logic\n\n    const fetchData = async () => {\n      // Example URL for recent submissions\n      const handle = 'tourist';\n      const apiUrl = `https://codeforces.com/api/user.status?handle=${handle}&from=1&count=9000000000`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        // Check if the response status is OK\n        if (data.status === 'OK') {\n          // Update state with the recent submissions data\n          setCodeforcesData(data.result);\n\n          // Count the number of unique problem IDs for submissions with verdict \"OK\"\n          const okSubmissions = data.result.filter(submission => submission.verdict === 'OK');\n          const uniqueProblemIds = new Set(okSubmissions.map(submission => submission.problem.contestId + submission.problem.index));\n          setOkProblemIds(uniqueProblemIds);\n        } else {\n          console.error('Codeforces API request failed with status:', data.status);\n        }\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Codeforces Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), codeforcesData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Unique Problem IDs with Verdict \\\"OK\\\": \", okProblemIds.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeforcesInfo, \"7Y+kkvHAmbbwWob9JPPm8etedm8=\");\n_c = CodeforcesInfo;\nexport default CodeforcesInfo;\nvar _c;\n$RefreshReg$(_c, \"CodeforcesInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodeforcesInfo","_s","codeforcesData","setCodeforcesData","okProblemIds","setOkProblemIds","Set","fetchData","handle","apiUrl","response","fetch","data","json","status","result","okSubmissions","filter","submission","verdict","uniqueProblemIds","map","problem","contestId","index","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/CodeforcesInfo.js"],"sourcesContent":["// // CodeforcesInfo.js\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import './Styles.css';\n\n// const CodeforcesInfo = () => {\n//   const [codeforcesData, setCodeforcesData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch Codeforces data and update the state\n//     // Replace the following with actual data fetching logic\n\n//     const fetchData = async () => {\n//       // Example URL\n//       const apiUrl = 'https://codeforces.com/api/user.info?handles=Tspectre';\n\n//       try {\n//         const response = await fetch(apiUrl);\n//         const data = await response.json();\n//         setCodeforcesData(data.result[0]);\n//       } catch (error) {\n//         console.error('Error fetching Codeforces data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Codeforces Information</h2>\n//       {codeforcesData && (\n//         <div className=\"card-content\">\n//           <p>Contribution Count: {codeforcesData.contribution}</p>\n//           <p>Problem Solved: {codeforcesData.problemsSolved}</p> {/* Update property name */}\n//           <p>Rank: {codeforcesData.rank}</p>\n//         </div>\n//       )}\n\n//     </div>\n//   );\n// };\n\n// export default CodeforcesInfo;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\n\nconst CodeforcesInfo = () => {\n  const [codeforcesData, setCodeforcesData] = useState(null);\n  const [okProblemIds, setOkProblemIds] = useState(new Set());\n\n  useEffect(() => {\n    // Fetch Codeforces data and update the state\n    // Replace the following with actual data fetching logic\n\n    const fetchData = async () => {\n      // Example URL for recent submissions\n      const handle = 'tourist';\n      const apiUrl = `https://codeforces.com/api/user.status?handle=${handle}&from=1&count=9000000000`;\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        \n        // Check if the response status is OK\n        if (data.status === 'OK') {\n          // Update state with the recent submissions data\n          setCodeforcesData(data.result);\n\n          // Count the number of unique problem IDs for submissions with verdict \"OK\"\n          const okSubmissions = data.result.filter(submission => submission.verdict === 'OK');\n          const uniqueProblemIds = new Set(okSubmissions.map(submission => submission.problem.contestId + submission.problem.index));\n          setOkProblemIds(uniqueProblemIds);\n        } else {\n          console.error('Codeforces API request failed with status:', data.status);\n        }\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h2>Codeforces Information</h2>\n      {codeforcesData && (\n        <div className=\"card-content\">\n          <h3>Total Unique Problem IDs with Verdict \"OK\": {okProblemIds.size}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CodeforcesInfo;\n\n\n\n\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,CAAC,CAAC,CAAC;EAE3DT,SAAS,CAAC,MAAM;IACd;IACA;;IAEA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,MAAM,GAAG,SAAS;MACxB,MAAMC,MAAM,GAAI,iDAAgDD,MAAO,0BAAyB;MAEhG,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;UACxB;UACAX,iBAAiB,CAACS,IAAI,CAACG,MAAM,CAAC;;UAE9B;UACA,MAAMC,aAAa,GAAGJ,IAAI,CAACG,MAAM,CAACE,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,OAAO,KAAK,IAAI,CAAC;UACnF,MAAMC,gBAAgB,GAAG,IAAId,GAAG,CAACU,aAAa,CAACK,GAAG,CAACH,UAAU,IAAIA,UAAU,CAACI,OAAO,CAACC,SAAS,GAAGL,UAAU,CAACI,OAAO,CAACE,KAAK,CAAC,CAAC;UAC1HnB,eAAe,CAACe,gBAAgB,CAAC;QACnC,CAAC,MAAM;UACLK,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEd,IAAI,CAACE,MAAM,CAAC;QAC1E;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB7B,OAAA;MAAA6B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B9B,cAAc,iBACbH,OAAA;MAAK4B,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B7B,OAAA;QAAA6B,QAAA,GAAI,gDAA4C,EAACxB,YAAY,CAAC6B,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/CID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}