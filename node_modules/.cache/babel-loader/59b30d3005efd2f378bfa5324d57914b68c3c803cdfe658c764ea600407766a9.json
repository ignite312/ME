{"ast":null,"code":"var _jsxFileName = \"/Users/emon/Desktop/ME/src/GitHubInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubInfo = () => {\n  _s();\n  const [githubData, setGithubData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Example URL\n      const apiUrl = 'https://api.github.com/users/ignite312';\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setGithubData(data);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchGitHubData = async () => {\n      const apiUrl = 'https://api.github.com/graphql';\n      const token = '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'; // Replace with your GitHub Personal Access Token\n\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n          }\n        }\n      `;\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query\n          })\n        });\n        const data = await response.json();\n        if (data.errors) {\n          throw new Error(`GitHub API request failed: ${data.errors[0].message}`);\n        }\n        setGithubData(data.data.viewer);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n    fetchGitHubData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), githubData && githubData.contributionsCollection && githubData.contributionsCollection.contributionCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Handle: \", githubData.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Followers: \", githubData.followers.totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contribution Count: \", githubData.contributionsCollection.contributionCalendar.totalContributions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Repositories: \", githubData.public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubInfo, \"bgmXX+24fRjLaw4ZnOAqWaTQMFg=\");\n_c = GitHubInfo;\nexport default GitHubInfo;\nvar _c;\n$RefreshReg$(_c, \"GitHubInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GitHubInfo","_s","githubData","setGithubData","fetchData","apiUrl","response","fetch","data","json","error","console","fetchGitHubData","token","query","method","headers","Authorization","body","JSON","stringify","errors","Error","message","viewer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contributionsCollection","contributionCalendar","login","followers","totalCount","totalContributions","public_repos","_c","$RefreshReg$"],"sources":["/Users/emon/Desktop/ME/src/GitHubInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\n\nconst GitHubInfo = () => {\n  const [githubData, setGithubData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Example URL\n      const apiUrl = 'https://api.github.com/users/ignite312';\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        setGithubData(data);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchGitHubData = async () => {\n      const apiUrl = 'https://api.github.com/graphql';\n      const token = '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'; // Replace with your GitHub Personal Access Token\n\n      const query = `\n        query {\n          viewer {\n            contributionsCollection {\n              contributionCalendar {\n                totalContributions\n              }\n            }\n            login\n            repositoriesContributedTo {\n              totalCount\n            }\n            followers {\n              totalCount\n            }\n          }\n        }\n      `;\n\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({ query }),\n        });\n\n        const data = await response.json();\n\n        if (data.errors) {\n          throw new Error(`GitHub API request failed: ${data.errors[0].message}`);\n        }\n\n        setGithubData(data.data.viewer);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n      }\n    };\n\n    fetchGitHubData();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <h3>GitHub</h3>\n      {githubData && githubData.contributionsCollection && githubData.contributionsCollection.contributionCalendar && (\n        <div className=\"card-content\">\n          <h2>Handle: {githubData.login}</h2>\n          <p>Followers: {githubData.followers.totalCount}</p>\n          <p>Contribution Count: {githubData.contributionsCollection.contributionCalendar.totalContributions}</p>\n          <p>Repositories: {githubData.public_repos}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GitHubInfo;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}