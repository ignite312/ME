{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import'./Styles.css';import codeforcesLogo from'./cf.png';// Replace with the actual file path of your Codeforces logo\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CodeforcesInfo=()=>{const[codeforcesData,setCodeforcesData]=useState(null);const[okProblemIds,setOkProblemIds]=useState(new Set());const[userDetails,setUserDetails]=useState(null);useEffect(()=>{// Fetch Codeforces data and update the state\nconst fetchData=async()=>{const handle='Tspectre';// Example URL for recent submissions\nconst submissionsUrl=\"https://codeforces.com/api/user.status?handle=\".concat(handle,\"&from=1&count=833714451\");// Example URL for user information\nconst userInfoUrl=\"https://codeforces.com/api/user.info?handles=\".concat(handle);try{// Fetch recent submissions data\nconst submissionsResponse=await fetch(submissionsUrl);const submissionsData=await submissionsResponse.json();// Fetch user information data\nconst userInfoResponse=await fetch(userInfoUrl);const userInfoData=await userInfoResponse.json();// Check if both API requests were successful\nif(submissionsData.status==='OK'&&userInfoData.status==='OK'){// Update state with the recent submissions data\nsetCodeforcesData(submissionsData.result);// Count the number of unique problem IDs for submissions with verdict \"OK\"\nconst okSubmissions=submissionsData.result.filter(submission=>submission.verdict==='OK');const uniqueProblemIds=new Set(okSubmissions.map(submission=>submission.problem.contestId+submission.problem.index));setOkProblemIds(uniqueProblemIds);// Update state with user details\nsetUserDetails(userInfoData.result[0]);}else{console.error('Codeforces API request failed.');}}catch(error){console.error('Error fetching Codeforces data:',error);}};fetchData();},[]);// ... (existing code)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Codeforces \"}),/*#__PURE__*/_jsx(\"img\",{src:codeforcesLogo,alt:\"Codeforces Logo\",className:\"logo\"}),codeforcesData&&userDetails&&/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"rank-container\",style:{color:'#1DE7E7'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:\"Handle: \"}),/*#__PURE__*/_jsx(\"strong\",{children:userDetails.handle})]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'green'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:\"Accepted Problem: \"}),/*#__PURE__*/_jsx(\"strong\",{children:okProblemIds.size})]}),userDetails.rank==='specialist'?/*#__PURE__*/_jsxs(\"div\",{className:\"rank-container\",style:{color:'#1DE7E7'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'black'},children:\"Rank: \"}),/*#__PURE__*/_jsx(\"strong\",{children:userDetails.rank.charAt(0).toUpperCase()+userDetails.rank.slice(1)})]}):/*#__PURE__*/_jsxs(\"p\",{style:{color:'black'},children:[\"Rank: \",userDetails.rank.charAt(0).toUpperCase()+userDetails.rank.slice(1)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Ratings: \",userDetails.rating]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Friends: \",userDetails.friendOfCount]})]})]});};export default CodeforcesInfo;","map":{"version":3,"names":["React","useState","useEffect","codeforcesLogo","jsx","_jsx","jsxs","_jsxs","CodeforcesInfo","codeforcesData","setCodeforcesData","okProblemIds","setOkProblemIds","Set","userDetails","setUserDetails","fetchData","handle","submissionsUrl","concat","userInfoUrl","submissionsResponse","fetch","submissionsData","json","userInfoResponse","userInfoData","status","result","okSubmissions","filter","submission","verdict","uniqueProblemIds","map","problem","contestId","index","console","error","className","children","src","alt","style","color","size","rank","charAt","toUpperCase","slice","rating","friendOfCount"],"sources":["/Users/emon/Desktop/ME/src/CodeforcesInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Styles.css';\nimport codeforcesLogo from './cf.png'; // Replace with the actual file path of your Codeforces logo\n\nconst CodeforcesInfo = () => {\n  const [codeforcesData, setCodeforcesData] = useState(null);\n  const [okProblemIds, setOkProblemIds] = useState(new Set());\n  const [userDetails, setUserDetails] = useState(null);\n\n  useEffect(() => {\n    // Fetch Codeforces data and update the state\n    const fetchData = async () => {\n      const handle = 'Tspectre';\n\n      // Example URL for recent submissions\n      const submissionsUrl = `https://codeforces.com/api/user.status?handle=${handle}&from=1&count=833714451`;\n      // Example URL for user information\n      const userInfoUrl = `https://codeforces.com/api/user.info?handles=${handle}`;\n\n      try {\n        // Fetch recent submissions data\n        const submissionsResponse = await fetch(submissionsUrl);\n        const submissionsData = await submissionsResponse.json();\n\n        // Fetch user information data\n        const userInfoResponse = await fetch(userInfoUrl);\n        const userInfoData = await userInfoResponse.json();\n\n        // Check if both API requests were successful\n        if (submissionsData.status === 'OK' && userInfoData.status === 'OK') {\n          // Update state with the recent submissions data\n          setCodeforcesData(submissionsData.result);\n\n          // Count the number of unique problem IDs for submissions with verdict \"OK\"\n          const okSubmissions = submissionsData.result.filter(submission => submission.verdict === 'OK');\n          const uniqueProblemIds = new Set(okSubmissions.map(submission => submission.problem.contestId + submission.problem.index));\n          setOkProblemIds(uniqueProblemIds);\n\n          // Update state with user details\n          setUserDetails(userInfoData.result[0]);\n        } else {\n          console.error('Codeforces API request failed.');\n        }\n      } catch (error) {\n        console.error('Error fetching Codeforces data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // ... (existing code)\n\n  return (\n    <div className=\"card\">\n      <h3>Codeforces </h3>\n      <img src={codeforcesLogo} alt=\"Codeforces Logo\" className=\"logo\" />\n      {codeforcesData && userDetails && (\n        <div className=\"card-content\">\n          <h2 className=\"rank-container\" style={{ color: '#1DE7E7' }}>\n              <span style={{ color: 'black' }}>Handle: </span>\n              <strong>{userDetails.handle}</strong>\n            </h2>\n          <div style={{ color: 'green' }}>\n              <span style={{ color: 'black' }}>Accepted Problem: </span>\n              <strong>{okProblemIds.size}</strong>\n            </div>\n          {userDetails.rank === 'specialist' ? (\n            <div className=\"rank-container\" style={{ color: '#1DE7E7' }}>\n              <span style={{ color: 'black' }}>Rank: </span>\n              <strong>{userDetails.rank.charAt(0).toUpperCase() + userDetails.rank.slice(1)}</strong>\n            </div>\n          ) : (\n            <p style={{ color: 'black' }}>Rank: {userDetails.rank.charAt(0).toUpperCase() + userDetails.rank.slice(1)}</p>\n          )}\n          <p>Ratings: {userDetails.rating}</p>\n          <p>Friends: {userDetails.friendOfCount}</p>\n        </div>\n      )}\n    </div>\n  );\n\n};\n\nexport default CodeforcesInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}